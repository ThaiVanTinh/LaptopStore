@page "/add-product"

<div class="container">
    <div class="col-md-6">
        <EditForm Model="MyProduct" Enhance OnInvalidSubmit = "HandleSaveProduct">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="card">
                <div class = "card-header">Add product</div>
                <div class = "card-body">
                    <div class="form-group">
                        <label class="form-label"> Name</label>
                        <InputText @bind-Value="MyProduct.Name" class="form-control"></InputText>
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label"> Price</label>
                        <InputNumber @bind-Value="MyProduct.Price" class="form-control"></InputNumber>
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label"> Quantity</label>
                        <InputNumber @bind-Value="MyProduct.Quantity" class="form-control"></InputNumber>
                    </div>
                    <div class="form-group mt-3">
                        <label class="form-label"> Description</label>
                        <InputTextArea @bind-Value="MyProduct.Description" class="form-control"></InputTextArea>
                    </div>
                    <div class="form-group mt-3">
<<<<<<< HEAD
                        <label class="form-label @(ImageUploadMessage == ""?"":"text-danger")">
=======
                        <label class="form-label">
                            @(ImageUploadMessage == ""?"":"text-danger")
>>>>>>> 24phut p3
                            @(ImageUploadMessage == "" ? "Upload Image" : ImageUploadMessage)
                        </label>
                        <InputFile class="form-control" OnChange="UploadImage"></InputFile>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="form-group mt-3">
                        @if (ShowSaveButton)
                        {
<<<<<<< HEAD
                            <button type="submit" class="btn btn-outline-primary"> 
                                <i class="fa fa-flus"></i>
                                Save Product</button>
=======
                            <button type="submit" class="btn btn-outline-primary">
                                <i class="fa fa-flus"></i>Save Product</button>
>>>>>>> 24phut p3
                        }
                        <BusyButtonComponent ShowBusyButton="ShowBusyButton"></BusyButtonComponent>
                    </div>

                </div>
            </div>

            
        </EditForm>
    </div>
</div>

            
<<<<<<< HEAD
<MessageDialog @href="messageDialog"></MessageDialog>
=======

<MessageDialog @ref="messageDialog"></MessageDialog>
>>>>>>> 24phut p3

@code {
    Product MyProduct = new();
    string ImageUploadMessage = "";
    async Task HandleSaveProduct()
    {
        ShowSaveButton = false;
        ShowBusyButton = !ShowSaveButton;

        if (string.IsNullOrEmpty(MyProduct.Base64Img))
        {
            messageDialog!.SetDialogValues("Warning", "You need choose image");
            SetMessageDialog();
            return;
        }

<<<<<<< HEAD
        var (flag, message) = await ProductService.AddProduct(MyProduct);
=======
        var (flag, message) = await ClientService.AddProDuct(MyProduct);
>>>>>>> 24phut p3
        if (flag)

            messageDialog!.SetDialogValues("Success", message);
        else
            messageDialog!.SetDialogValues("Danger", message);

        SetMessageDialog();
        return;
    }


    async Task UploadImage(InputFileChangeEventArgs e)
    {
<<<<<<< HEAD
        if (e.File.Name.ToLower().Contains(".png"))
        {
            var format = "image/png";
=======
        if (e.File.Name.ToLower().Contains(".jpg"))
        {
            var format = "image/jpg";
>>>>>>> 24phut p3
            var resizeImage = await e.File.RequestImageFileAsync(format, 300, 300);
            var buffer = new byte[resizeImage.Size];
            await resizeImage.OpenReadStream().ReadAsync(buffer);
            var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            ImageUploadMessage = "";
            MyProduct.Base64Img = imageData;
            imageData = "";
            return;
        }
<<<<<<< HEAD
        ImageUploadMessage = "PNG file needed";
        return;
    }
=======
        ImageUploadMessage = "JPG file needed.";
        return;
    }

>>>>>>> 24phut p3
    MessageDialog? messageDialog;

    public bool ShowBusyButton { get; set; }
    public bool ShowSaveButton { get; set; } = true;

    private async void SetMessageDialog()
    {
        await messageDialog!.ShowMessage();
        ShowBusyButton = false;
        ShowSaveButton = !ShowBusyButton;
        StateHasChanged();
    }
<<<<<<< HEAD
=======

>>>>>>> 24phut p3
}



